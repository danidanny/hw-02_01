# -*- coding: utf-8 -*-
"""ДЗ 02_01 Библиотека pandas .ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1HrHzq3ltxLXAysL20DLU2nB6Y25fEiG2
"""

Danil Shabalin DJO-32#5895

# Задание1

import pandas as pd
#? можно ли это задание решить через numpy?

movies = pd.read_csv('movies.csv')

ratings = pd.read_csv('ratings.csv')

#я сперва таким образом отфильтровал, но решил перепроверить
#ratings[['movieId','rating']].value_counts().head()

mov_id_rat = ratings[['movieId','rating']]

mov_id_rat_5 = mov_id_rat.query('rating == 5.0')

group_mov_id_rat_5 = mov_id_rat_5['movieId'].value_counts()
print(group_mov_id_rat_5,type(group_mov_id_rat_5))

top_movie_id = group_mov_id_rat_5.idxmax()

print(movies[ movies.movieId == top_movie_id]['title'])
#? как правильно выводить объекты ? вот я наверху пробовал, но уж слишком много инфы

#вот так лучше?
print(movies[ movies.movieId == top_movie_id].iloc[0][1])
#?есть другие вар-ты вывода?

#Задание 2

import pandas as pd

power = pd.read_csv('power.csv')

filter_countries = power[ (power['country']=='Latvia') | (power['country']=='Lithuania') | (power['country']== 'Estonia') ]

filter_year_countries = filter_countries[ (2005.0 <= filter_countries.year) & (filter_countries.year <= 2010.0 ) ]

filter_quantity_year_countries = filter_year_countries[(filter_year_countries.quantity >= 0.0) ]

filter_category_quantity_year_countries = filter_quantity_year_countries[ (filter_quantity_year_countries['category'] == 4.0) |
                                                                         (filter_quantity_year_countries['category'] == 12.0) |
                                                                          (filter_quantity_year_countries['category'] == 21.0)
                                                                          ]

summa = filter_category_quantity_year_countries['quantity'].sum()

print(summa)
#?есть какой-то альтернативный вар-т фильтрации
#мне кажется я слишком "по-детски" сделал(хотя сделал:) ), может быть есть более продвинутые вар-ты

#Задание 3

import requests
import pandas as pd

class Forttrader_tables:

  def __init__(self):
    header = {
    "User-Agent": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/50.0.2661.75 Safari/537.36",
    "X-Requested-With": "XMLHttpRequest"
  }

    url = 'https://fortraders.org/quotes'

    r = requests.get(url, headers=header)

    self.forttrader_list_tables = pd.read_html(r.text)

  def forttrader_currency_table(self):
    return self.forttrader_list_tables[0]

  def forttrader_currency_eur(self):
    table = self.forttrader_list_tables[0]
    name = table.iat[0,0]
    price = table.iat[0,1]

    return print(f'{name} = {price}')


#?когда применял forttrader = pd.read_html('https://fortraders.org/quotes')
#? была ошибка HTTPError: HTTP Error 403: Forbidden
# я ее правильно обошел? или можно что-то лучше сделать?

#а можно обращаться к таблицам по названию(как на сайте они названы)?
# те вместо self.forttrader_list_tables[0]
  # что-то типа forttrader_list_tables['Курсы валют к рублю']

forttrader = Forttrader_tables()

currency_table = forttrader.forttrader_currency_table()

currency_table
#? почему в таблице в столбце Обновлено - показывается NaN?

eur = forttrader.forttrader_currency_eur()

eur

pytonworld = pd.read_html('https://pythonworld.ru/tipy-dannyx-v-python/stroki-funkcii-i-metody-strok.html')

table_pyt = pytonworld[0]

table_pyt.head()

print(table_pyt['Функция или метод'][4],'-->',table_pyt['Назначение'][4])